// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Staff {
  id               Int               @id @default(autoincrement())
  password         String
  firstName        String
  lastName         String
  roleId           Int               @unique
  role             Role              @relation(fields: [roleId], references: [id])
  subjectInstances SubjectInstance[]
}

model Student {
  id           Int               @id @default(autoincrement())
  password     String
  firstName    String
  lastName     String
  yearId       Int
  role         String            @default("STUDENT")
  year         Year              @relation(fields: [yearId], references: [id])
  positions    StudentPosition[]
  CAResults    CAResult[]
  finalResults FinalResult[]
}

model Role {
  id    Int      @id @default(autoincrement())
  name  RoleName @unique
  staff Staff?
}

model Position {
  id       Int               @id @default(autoincrement())
  name     PositionName      @unique
  students StudentPosition[]
}

model StudentPosition {
  studentId  Int
  positionId Int
  student    Student  @relation(fields: [studentId], references: [id])
  position   Position @relation(fields: [positionId], references: [id])

  @@id([studentId, positionId])
}

enum RoleName {
  EXAMINATION_OFFICER
  LECTURE
  STUDENT
}

enum PositionName {
  STUDENT_PRESIDENT
  CLASS_REPRESENTATIVE
}

model AcademicYear {
  id        Int        @id @default(autoincrement())
  year      String     @unique
  semesters Semester[]
}

model College {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  departments Department[]
}

model Department {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  collegeId Int
  college   College  @relation(fields: [collegeId], references: [id])
  courses   Course[]
}

model Course {
  id           Int        @id @default(autoincrement())
  name         String
  departmentId Int
  department   Department @relation(fields: [departmentId], references: [id])
  levels       Level[]
}

model Level {
  id       Int    @id @default(autoincrement())
  name     String // This could be "Diploma", "Bachelor", "Master", etc.
  courseId Int
  course   Course @relation(fields: [courseId], references: [id])
  years    Year[]
}

model Year {
  id       Int       @id @default(autoincrement())
  name     String // This could be "First Year", "Second Year", etc.
  levelId  Int
  level    Level     @relation(fields: [levelId], references: [id])
  students Student[]
  subjects Subject[]
}

model CAComponent {
  id        Int        @id @default(autoincrement())
  name      String
  marks     Int
  CAId      Int
  CA        CA         @relation(fields: [CAId], references: [id])
  CAResults CAResult[]
}

model FinalResult {
  id                Int             @id @default(autoincrement())
  marks             Int?
  studentId         Int
  student           Student         @relation(fields: [studentId], references: [id])
  subjectInstanceId Int
  subjectInstance   SubjectInstance @relation(fields: [subjectInstanceId], references: [id])
}

model Semester {
  id               Int               @id @default(autoincrement())
  name             String
  academicYearId   Int
  academicYear     AcademicYear      @relation(fields: [academicYearId], references: [id])
  subjectInstances SubjectInstance[]
}

model CAResult {
  id                Int             @id @default(autoincrement())
  marks             Int?
  studentId         Int
  student           Student         @relation(fields: [studentId], references: [id])
  componentId       Int
  component         CAComponent     @relation(fields: [componentId], references: [id])
  subjectInstanceId Int
  subjectInstance   SubjectInstance @relation(fields: [subjectInstanceId], references: [id])
}

model CA {
  id                Int             @id @default(autoincrement())
  subjectInstanceId Int
  subjectInstance   SubjectInstance @relation(fields: [subjectInstanceId], references: [id])
  components        CAComponent[]
}

model Subject {
  id               Int               @id @default(autoincrement())
  name             String
  yearId           Int
  year             Year              @relation(fields: [yearId], references: [id])
  subjectInstances SubjectInstance[]
}

model SubjectInstance {
  id           Int           @id @default(autoincrement())
  subjectId    Int
  subject      Subject       @relation(fields: [subjectId], references: [id])
  semesterId   Int
  semester     Semester      @relation(fields: [semesterId], references: [id])
  lectererId   Int
  lecturer     Staff         @relation(fields: [lectererId], references: [id])
  CAResults    CAResult[]
  finalResults FinalResult[]
  CAs          CA[]

  @@unique([subjectId, semesterId])
}
